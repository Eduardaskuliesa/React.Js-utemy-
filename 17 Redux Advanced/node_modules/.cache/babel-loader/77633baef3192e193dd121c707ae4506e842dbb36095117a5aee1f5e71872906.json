{"ast":null,"code":"import { uiActions } from \"./ui-sicle\";\nimport { cartActions } from \"./cart-slice\";\nexport const sendCartData = cartData => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending..\",\n      message: \"Sending cart data!\"\n    }));\n    const sendRequest = async () => {\n      const response = await fetch(\"https://react-http-6733a-default-rtdb.europe-west1.firebasedatabase.app/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cartData),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed.\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success!\",\n        message: \"Sending cart data successfully!\"\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Sending cart data failed!\"\n      }));\n    }\n  };\n};\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fethData = async () => {\n      const response = fetch(\"https://react-http-6733a-default-rtdb.europe-west1.firebasedatabase.app/cart.json\");\n      console.log(response);\n      if (!response.ok) {\n        throw new Error(\"Could fetch cart data\");\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fethData();\n      dispatch(cartActions.replaceCart(cartData));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Fetching cart data failed!\"\n      }), console.log(error.message));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","cartActions","sendCartData","cartData","dispatch","showNotification","status","title","message","sendRequest","response","fetch","method","body","JSON","stringify","headers","ok","Error","error","fetchCartData","fethData","console","log","data","json","replaceCart"],"sources":["C:/Users/Eduardas/Desktop/React.Js(utemy)/17 Redux Advanced/src/components/store/cart-actions.js"],"sourcesContent":["import { uiActions } from \"./ui-sicle\";\r\nimport { cartActions } from \"./cart-slice\";\r\n\r\nexport const sendCartData = (cartData) => {\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: \"pending\",\r\n        title: \"Sending..\",\r\n        message: \"Sending cart data!\",\r\n      })\r\n    );\r\n    const sendRequest = async () => {\r\n      const response = await fetch(\r\n        \"https://react-http-6733a-default-rtdb.europe-west1.firebasedatabase.app/cart.json\",\r\n        {\r\n          method: \"PUT\",\r\n          body: JSON.stringify(cartData),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Sending cart data failed.\");\r\n      }\r\n    };\r\n    try {\r\n      await sendRequest();\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"success\",\r\n          title: \"Success!\",\r\n          message: \"Sending cart data successfully!\",\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"error\",\r\n          title: \"Error!\",\r\n          message: \"Sending cart data failed!\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchCartData = () => {\r\n  return async (dispatch) => {\r\n    const fethData = async () => {\r\n      const response = fetch(\r\n        \"https://react-http-6733a-default-rtdb.europe-west1.firebasedatabase.app/cart.json\"\r\n      );\r\n      console.log(response)\r\n      if (!response.ok) {\r\n        throw new Error(\"Could fetch cart data\");\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    };\r\n    try {\r\n      const cartData = await fethData();\r\n      dispatch(cartActions.replaceCart(cartData));\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"error\",\r\n          title: \"Error!\",\r\n          message: \"Fetching cart data failed!\",\r\n        }),\r\n        console.log(error.message)\r\n      );\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AACtC,SAASC,WAAW,QAAQ,cAAc;AAE1C,OAAO,MAAMC,YAAY,GAAIC,QAAQ,IAAK;EACxC,OAAO,MAAOC,QAAQ,IAAK;IACzBA,QAAQ,CACNJ,SAAS,CAACK,gBAAgB,CAAC;MACzBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,WAAW;MAClBC,OAAO,EAAE;IACX,CAAC,CACH,CAAC;IACD,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,mFAAmF,EACnF;QACEC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,QAAQ,CAAC;QAC9Ba,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MACD,IAAI,CAACN,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;IACF,CAAC;IACD,IAAI;MACF,MAAMT,WAAW,CAAC,CAAC;MACnBL,QAAQ,CACNJ,SAAS,CAACK,gBAAgB,CAAC;QACzBC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdf,QAAQ,CACNJ,SAAS,CAACK,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMY,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAO,MAAOhB,QAAQ,IAAK;IACzB,MAAMiB,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMX,QAAQ,GAAGC,KAAK,CACpB,mFACF,CAAC;MACDW,OAAO,CAACC,GAAG,CAACb,QAAQ,CAAC;MACrB,IAAI,CAACA,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1C;MACA,MAAMM,IAAI,GAAG,MAAMd,QAAQ,CAACe,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC;IACD,IAAI;MACF,MAAMrB,QAAQ,GAAG,MAAMkB,QAAQ,CAAC,CAAC;MACjCjB,QAAQ,CAACH,WAAW,CAACyB,WAAW,CAACvB,QAAQ,CAAC,CAAC;IAC7C,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdf,QAAQ,CACNJ,SAAS,CAACK,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CAAC,EACFc,OAAO,CAACC,GAAG,CAACJ,KAAK,CAACX,OAAO,CAC3B,CAAC;IACH;EACF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}